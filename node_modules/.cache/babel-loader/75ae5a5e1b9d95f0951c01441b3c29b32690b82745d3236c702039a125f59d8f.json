{"ast":null,"code":"var _jsxFileName = \"/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js\",\n  _s = $RefreshSig$();\n//TypingGame.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport apiService from './services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sentences = [\"Mistress Bijoux controls me.\", \"Mistress Bijoux is my entire life.\", \"Gooning for Mistress Bijoux is my religion.\", \"I vow to always be a good gooner for Mistress Bijoux.\", \"Worshipping Mistress Bijoux is my duty as Her servant.\", \"I will always obey Mistress Bijoux.\", \"My job is to please Mistress Bijoux.\", \"Mistress Bijoux is the reason I exist.\", \"My skills as a servant must be used to please Mistress Bijoux.\", \"I will always be a good servant for Mistress Bijoux.\"];\nconst TypingGame = () => {\n  _s();\n  const [sentence, setSentence] = useState('');\n  const [input, setInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(60);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [user, setUser] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [sentencesCompleted, setSentencesCompleted] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [showUserForm, setShowUserForm] = useState(true);\n  const [username, setUsername] = useState('');\n  const [stats, setStats] = useState(null);\n  const generateRandomSentence = () => {\n    const randomIndex = Math.floor(Math.random() * sentences.length);\n    setSentence(sentences[randomIndex]);\n  };\n  const startGame = useCallback(() => {\n    generateRandomSentence();\n    setTime(60);\n    setIsGameOver(false);\n  }, []);\n  useEffect(() => {\n    if (isGameStarted) {\n      startGame();\n    }\n  }, [isGameStarted, startGame]);\n  useEffect(() => {\n    if (time > 0 && !isGameOver && isGameStarted) {\n      const timer = setTimeout(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (time === 0 && isGameStarted) {\n      setIsGameOver(true);\n    }\n  }, [time, isGameOver, isGameStarted]);\n  const handleChange = e => {\n    if (!isGameOver && isGameStarted) {\n      setInput(e.target.value);\n      if (e.target.value === sentence) {\n        setScore(prevScore => prevScore + 1);\n        setInput('');\n        generateRandomSentence();\n      }\n    }\n  };\n  const handleStartGame = () => {\n    setIsGameStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Affirmations for Mistress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), !isGameStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartGame,\n      className: \"start-button\",\n      children: \"Begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), isGameStarted && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Left: \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), !isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleChange,\n          className: \"input-field\",\n          placeholder: \"Type here...\",\n          autoFocus: true,\n          disabled: isGameOver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Work harder.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingGame, \"zUvMWW8RXYNoZLciQP7VQXZxzlM=\");\n_c = TypingGame;\nexport default TypingGame;\nvar _c;\n$RefreshReg$(_c, \"TypingGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","sentences","TypingGame","_s","sentence","setSentence","input","setInput","score","setScore","time","setTime","isGameOver","setIsGameOver","isGameStarted","setIsGameStarted","user","setUser","sessionId","setSessionId","sentencesCompleted","setSentencesCompleted","startTime","setStartTime","showUserForm","setShowUserForm","username","setUsername","stats","setStats","generateRandomSentence","randomIndex","Math","floor","random","length","startGame","timer","setTimeout","prevTime","clearTimeout","handleChange","e","target","value","prevScore","handleStartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","placeholder","autoFocus","disabled","_c","$RefreshReg$"],"sources":["/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js"],"sourcesContent":["//TypingGame.js\nimport React, {\n    useState,\n    useEffect,\n    useCallback\n} from 'react';\nimport './App.css';\nimport apiService from './services/api';\n\nconst sentences = [\n    \"Mistress Bijoux controls me.\",\n    \"Mistress Bijoux is my entire life.\",\n    \"Gooning for Mistress Bijoux is my religion.\",\n    \"I vow to always be a good gooner for Mistress Bijoux.\",\n    \"Worshipping Mistress Bijoux is my duty as Her servant.\",\n    \"I will always obey Mistress Bijoux.\",\n    \"My job is to please Mistress Bijoux.\",\n    \"Mistress Bijoux is the reason I exist.\",\n    \"My skills as a servant must be used to please Mistress Bijoux.\",\n    \"I will always be a good servant for Mistress Bijoux.\",\n];\n\nconst TypingGame = () => {\n    const [sentence, setSentence] = useState('');\n    const [input, setInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [time, setTime] = useState(60);\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [isGameStarted, setIsGameStarted] = useState(false);\n    const [user, setUser] = useState(null);\n    const [sessionId, setSessionId] = useState(null);\n    const [sentencesCompleted, setSentencesCompleted] = useState(0);\n    const [startTime, setStartTime] = useState(null);\n    const [showUserForm, setShowUserForm] = useState(true);\n    const [username, setUsername] = useState('');\n    const [stats, setStats] = useState(null);\n\n    const generateRandomSentence = () => {\n        const randomIndex = Math.floor(Math.random() * sentences.length);\n        setSentence(sentences[randomIndex]);\n    };\n\n    const startGame = useCallback(() => {\n        generateRandomSentence();\n        setTime(60);\n        setIsGameOver(false);\n    }, []);\n\n    useEffect(() => {\n        if (isGameStarted) {\n            startGame();\n        }\n    }, [isGameStarted, startGame]);\n\n    useEffect(() => {\n        if (time > 0 && !isGameOver && isGameStarted) {\n            const timer = setTimeout(() => {\n                setTime((prevTime) => prevTime - 1);\n            }, 1000);\n\n            return () => clearTimeout(timer);\n        } else if (time === 0 && isGameStarted) {\n            setIsGameOver(true);\n        }\n    }, [time, isGameOver, isGameStarted]);\n\n    const handleChange = (e) => {\n        if (!isGameOver && isGameStarted) {\n            setInput(e.target.value);\n            if (e.target.value === sentence) {\n                setScore((prevScore) => prevScore + 1);\n                setInput('');\n                generateRandomSentence();\n            }\n        }\n    };\n\n    const handleStartGame = () => {\n        setIsGameStarted(true);\n    };\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Affirmations for Mistress</h1>\n            {!isGameStarted && (\n                <button onClick={handleStartGame}\n                    className=\"start-button\">\n                    Begin\n                </button>\n            )}\n            {isGameStarted && (\n                <>\n                    <div className=\"timer\">Time Left: {time}</div>\n                    <div className=\"sentence\">{sentence}</div>\n                    {!isGameOver && (\n                        <div className=\"input-container\">\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={handleChange}\n                                className=\"input-field\"\n                                placeholder=\"Type here...\"\n                                autoFocus\n                                disabled={isGameOver}\n                            />\n                        </div>\n                    )}\n                </>\n            )}\n            {isGameOver && (\n                <div className=\"game-over\">\n                    <p>Work harder.</p>\n                    <p>Your Score: {score}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TypingGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}