{"ast":null,"code":"//TypingGame.js\nimport React,{useState,useEffect,useCallback}from'react';import'./App.css';import apiService from'./services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const sentences=[\"Mistress Bijoux controls me.\",\"Mistress Bijoux is my entire life.\",\"Gooning for Mistress Bijoux is my religion.\",\"I vow to always be a good gooner for Mistress Bijoux.\",\"Worshipping Mistress Bijoux is my duty as Her servant.\",\"I will always obey Mistress Bijoux.\",\"My job is to please Mistress Bijoux.\",\"Mistress Bijoux is the reason I exist.\",\"My skills as a servant must be used to please Mistress Bijoux.\",\"I will always be a good servant for Mistress Bijoux.\"];const TypingGame=()=>{const[sentence,setSentence]=useState('');const[input,setInput]=useState('');const[score,setScore]=useState(0);const[time,setTime]=useState(60);const[isGameOver,setIsGameOver]=useState(false);const[isGameStarted,setIsGameStarted]=useState(false);const[user,setUser]=useState(null);const[sessionId,setSessionId]=useState(null);const[sentencesCompleted,setSentencesCompleted]=useState(0);const[startTime,setStartTime]=useState(null);const[showUserForm,setShowUserForm]=useState(true);const[username,setUsername]=useState('');const[stats,setStats]=useState(null);const generateRandomSentence=()=>{const randomIndex=Math.floor(Math.random()*sentences.length);setSentence(sentences[randomIndex]);};const startGame=useCallback(()=>{generateRandomSentence();setTime(60);setIsGameOver(false);},[]);useEffect(()=>{if(isGameStarted){startGame();}},[isGameStarted,startGame]);useEffect(()=>{if(time>0&&!isGameOver&&isGameStarted){const timer=setTimeout(()=>{setTime(prevTime=>prevTime-1);},1000);return()=>clearTimeout(timer);}else if(time===0&&isGameStarted){setIsGameOver(true);}},[time,isGameOver,isGameStarted]);const handleChange=e=>{if(!isGameOver&&isGameStarted){setInput(e.target.value);if(e.target.value===sentence){const newScore=score+1;const newSentencesCompleted=sentencesCompleted+1;setScore(newScore);setSentencesCompleted(newSentencesCompleted);setInput('');// Save sentence attempt to database\nif(sessionId){const timeTaken=Date.now()-startTime;apiService.saveSentenceAttempt(sessionId,sentence,e.target.value,true,timeTaken);}generateRandomSentence();}}};const handleStartGame=async()=>{if(!user){// Create user if not exists\ntry{const newUser=await apiService.createUser(username);setUser(newUser);setShowUserForm(false);}catch(error){console.error('Error creating user:',error);return;}}setIsGameStarted(true);setStartTime(Date.now());// Create game session\nif(user){try{const session=await apiService.createGameSession(user.id,{score:0,timeLeft:60,sentencesCompleted:0,accuracy:0,wpm:0});setSessionId(session.id);}catch(error){console.error('Error creating session:',error);}}};const handleUserSubmit=async e=>{e.preventDefault();if(username.trim()){try{const newUser=await apiService.createUser(username.trim());setUser(newUser);setShowUserForm(false);}catch(error){console.error('Error creating user:',error);}}};const loadUserStats=useCallback(async()=>{if(user){try{const userStats=await apiService.getUserStats(user.id);setStats(userStats);}catch(error){console.error('Error loading stats:',error);}}},[user]);const saveGameSession=useCallback(async()=>{if(user&&sessionId){const wpm=sentencesCompleted>0?sentencesCompleted*60/(60-time):0;const accuracy=sentencesCompleted>0?sentencesCompleted/(sentencesCompleted+0)*100:0;try{await apiService.createGameSession(user.id,{score,timeLeft:time,sentencesCompleted,accuracy,wpm});}catch(error){console.error('Error saving session:',error);}}},[user,sessionId,sentencesCompleted,time,score]);useEffect(()=>{if(isGameOver&&user){saveGameSession();loadUserStats();}},[isGameOver,user,saveGameSession,loadUserStats]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Affirmations for Mistress\"}),showUserForm&&!user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter Your Name\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUserSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Your name...\",className:\"input-field\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"start-button\",children:\"Continue\"})]})]}),user&&!isGameStarted&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Welcome, \",user.username,\"!\"]}),stats&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Statistics:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Best Score: \",stats.best_score||0]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Average WPM: \",Math.round(stats.avg_wpm||0)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Sessions: \",stats.total_sessions||0]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleStartGame,className:\"start-button\",children:\"Begin\"})]}),isGameStarted&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Time Left: \",time]}),/*#__PURE__*/_jsx(\"div\",{className:\"sentence\",children:sentence}),!isGameOver&&/*#__PURE__*/_jsx(\"div\",{className:\"input-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleChange,className:\"input-field\",placeholder:\"Type here...\",autoFocus:true,disabled:isGameOver})})]}),isGameOver&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-over\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Work harder.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score: \",score]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Sentences Completed: \",sentencesCompleted]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setScore(0);setSentencesCompleted(0);setTime(60);setIsGameOver(false);setIsGameStarted(false);setInput('');},className:\"start-button\",children:\"Play Again\"})]})]});};export default TypingGame;","map":{"version":3,"names":["React","useState","useEffect","useCallback","apiService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","sentences","TypingGame","sentence","setSentence","input","setInput","score","setScore","time","setTime","isGameOver","setIsGameOver","isGameStarted","setIsGameStarted","user","setUser","sessionId","setSessionId","sentencesCompleted","setSentencesCompleted","startTime","setStartTime","showUserForm","setShowUserForm","username","setUsername","stats","setStats","generateRandomSentence","randomIndex","Math","floor","random","length","startGame","timer","setTimeout","prevTime","clearTimeout","handleChange","e","target","value","newScore","newSentencesCompleted","timeTaken","Date","now","saveSentenceAttempt","handleStartGame","newUser","createUser","error","console","session","createGameSession","id","timeLeft","accuracy","wpm","handleUserSubmit","preventDefault","trim","loadUserStats","userStats","getUserStats","saveGameSession","className","children","onSubmit","type","onChange","placeholder","required","best_score","round","avg_wpm","total_sessions","onClick","autoFocus","disabled"],"sources":["/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js"],"sourcesContent":["//TypingGame.js\nimport React, {\n    useState,\n    useEffect,\n    useCallback\n} from 'react';\nimport './App.css';\nimport apiService from './services/api';\n\nconst sentences = [\n    \"Mistress Bijoux controls me.\",\n    \"Mistress Bijoux is my entire life.\",\n    \"Gooning for Mistress Bijoux is my religion.\",\n    \"I vow to always be a good gooner for Mistress Bijoux.\",\n    \"Worshipping Mistress Bijoux is my duty as Her servant.\",\n    \"I will always obey Mistress Bijoux.\",\n    \"My job is to please Mistress Bijoux.\",\n    \"Mistress Bijoux is the reason I exist.\",\n    \"My skills as a servant must be used to please Mistress Bijoux.\",\n    \"I will always be a good servant for Mistress Bijoux.\",\n];\n\nconst TypingGame = () => {\n    const [sentence, setSentence] = useState('');\n    const [input, setInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [time, setTime] = useState(60);\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [isGameStarted, setIsGameStarted] = useState(false);\n    const [user, setUser] = useState(null);\n    const [sessionId, setSessionId] = useState(null);\n    const [sentencesCompleted, setSentencesCompleted] = useState(0);\n    const [startTime, setStartTime] = useState(null);\n    const [showUserForm, setShowUserForm] = useState(true);\n    const [username, setUsername] = useState('');\n    const [stats, setStats] = useState(null);\n\n    const generateRandomSentence = () => {\n        const randomIndex = Math.floor(Math.random() * sentences.length);\n        setSentence(sentences[randomIndex]);\n    };\n\n    const startGame = useCallback(() => {\n        generateRandomSentence();\n        setTime(60);\n        setIsGameOver(false);\n    }, []);\n\n    useEffect(() => {\n        if (isGameStarted) {\n            startGame();\n        }\n    }, [isGameStarted, startGame]);\n\n    useEffect(() => {\n        if (time > 0 && !isGameOver && isGameStarted) {\n            const timer = setTimeout(() => {\n                setTime((prevTime) => prevTime - 1);\n            }, 1000);\n\n            return () => clearTimeout(timer);\n        } else if (time === 0 && isGameStarted) {\n            setIsGameOver(true);\n        }\n    }, [time, isGameOver, isGameStarted]);\n\n    const handleChange = (e) => {\n        if (!isGameOver && isGameStarted) {\n            setInput(e.target.value);\n            if (e.target.value === sentence) {\n                const newScore = score + 1;\n                const newSentencesCompleted = sentencesCompleted + 1;\n                setScore(newScore);\n                setSentencesCompleted(newSentencesCompleted);\n                setInput('');\n                \n                // Save sentence attempt to database\n                if (sessionId) {\n                    const timeTaken = Date.now() - startTime;\n                    apiService.saveSentenceAttempt(\n                        sessionId,\n                        sentence,\n                        e.target.value,\n                        true,\n                        timeTaken\n                    );\n                }\n                \n                generateRandomSentence();\n            }\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!user) {\n            // Create user if not exists\n            try {\n                const newUser = await apiService.createUser(username);\n                setUser(newUser);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error creating user:', error);\n                return;\n            }\n        }\n        \n        setIsGameStarted(true);\n        setStartTime(Date.now());\n        \n        // Create game session\n        if (user) {\n            try {\n                const session = await apiService.createGameSession(user.id, {\n                    score: 0,\n                    timeLeft: 60,\n                    sentencesCompleted: 0,\n                    accuracy: 0,\n                    wpm: 0\n                });\n                setSessionId(session.id);\n            } catch (error) {\n                console.error('Error creating session:', error);\n            }\n        }\n    };\n\n    const handleUserSubmit = async (e) => {\n        e.preventDefault();\n        if (username.trim()) {\n            try {\n                const newUser = await apiService.createUser(username.trim());\n                setUser(newUser);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error creating user:', error);\n            }\n        }\n    };\n\n    const loadUserStats = useCallback(async () => {\n        if (user) {\n            try {\n                const userStats = await apiService.getUserStats(user.id);\n                setStats(userStats);\n            } catch (error) {\n                console.error('Error loading stats:', error);\n            }\n        }\n    }, [user]);\n\n    const saveGameSession = useCallback(async () => {\n        if (user && sessionId) {\n            const wpm = sentencesCompleted > 0 ? (sentencesCompleted * 60) / (60 - time) : 0;\n            const accuracy = sentencesCompleted > 0 ? (sentencesCompleted / (sentencesCompleted + 0)) * 100 : 0;\n            \n            try {\n                await apiService.createGameSession(user.id, {\n                    score,\n                    timeLeft: time,\n                    sentencesCompleted,\n                    accuracy,\n                    wpm\n                });\n            } catch (error) {\n                console.error('Error saving session:', error);\n            }\n        }\n    }, [user, sessionId, sentencesCompleted, time, score]);\n\n    useEffect(() => {\n        if (isGameOver && user) {\n            saveGameSession();\n            loadUserStats();\n        }\n    }, [isGameOver, user, saveGameSession, loadUserStats]);\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Affirmations for Mistress</h1>\n            \n            {showUserForm && !user && (\n                <div className=\"user-form\">\n                    <h2>Enter Your Name</h2>\n                    <form onSubmit={handleUserSubmit}>\n                        <input\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            placeholder=\"Your name...\"\n                            className=\"input-field\"\n                            required\n                        />\n                        <button type=\"submit\" className=\"start-button\">\n                            Continue\n                        </button>\n                    </form>\n                </div>\n            )}\n\n            {user && !isGameStarted && (\n                <div className=\"game-info\">\n                    <p>Welcome, {user.username}!</p>\n                    {stats && (\n                        <div className=\"stats\">\n                            <h3>Your Statistics:</h3>\n                            <p>Best Score: {stats.best_score || 0}</p>\n                            <p>Average WPM: {Math.round(stats.avg_wpm || 0)}</p>\n                            <p>Total Sessions: {stats.total_sessions || 0}</p>\n                        </div>\n                    )}\n                    <button onClick={handleStartGame} className=\"start-button\">\n                        Begin\n                    </button>\n                </div>\n            )}\n\n            {isGameStarted && (\n                <>\n                    <div className=\"timer\">Time Left: {time}</div>\n                    <div className=\"sentence\">{sentence}</div>\n                    {!isGameOver && (\n                        <div className=\"input-container\">\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={handleChange}\n                                className=\"input-field\"\n                                placeholder=\"Type here...\"\n                                autoFocus\n                                disabled={isGameOver}\n                            />\n                        </div>\n                    )}\n                </>\n            )}\n            \n            {isGameOver && (\n                <div className=\"game-over\">\n                    <p>Work harder.</p>\n                    <p>Your Score: {score}</p>\n                    <p>Sentences Completed: {sentencesCompleted}</p>\n                    <button \n                        onClick={() => {\n                            setScore(0);\n                            setSentencesCompleted(0);\n                            setTime(60);\n                            setIsGameOver(false);\n                            setIsGameStarted(false);\n                            setInput('');\n                        }} \n                        className=\"start-button\"\n                    >\n                        Play Again\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TypingGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}