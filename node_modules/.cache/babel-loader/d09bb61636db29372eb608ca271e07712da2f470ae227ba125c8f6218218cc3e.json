{"ast":null,"code":"import React,{useState,useEffect}from'react';import TypingGame from'./TypingGame';import Navbar from'./components/Navbar';import LeaderboardPage from'./components/LeaderboardPage';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentPage,setCurrentPage]=useState('game');const[isDarkMode,setIsDarkMode]=useState(()=>{const saved=localStorage.getItem('darkMode');return saved?JSON.parse(saved):false;});const[user,setUser]=useState(null);useEffect(()=>{if(isDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}},[isDarkMode]);const toggleDarkMode=()=>{const newDarkMode=!isDarkMode;setIsDarkMode(newDarkMode);localStorage.setItem('darkMode',JSON.stringify(newDarkMode));};const handlePageChange=page=>{setCurrentPage(page);};const handleUserLogin=userData=>{setUser(userData);};const handleLogout=()=>{setUser(null);setCurrentPage('game');};const renderCurrentPage=()=>{switch(currentPage){case'leaderboard':return/*#__PURE__*/_jsx(LeaderboardPage,{isDarkMode:isDarkMode});case'game':default:return/*#__PURE__*/_jsx(TypingGame,{isDarkMode:isDarkMode,onUserLogin:handleUserLogin,user:user,onLogout:handleLogout});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navbar,{currentPage:currentPage,onPageChange:handlePageChange,isDarkMode:isDarkMode,onToggleDarkMode:toggleDarkMode,user:user,onLogout:handleLogout}),renderCurrentPage()]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","TypingGame","Navbar","LeaderboardPage","jsx","_jsx","jsxs","_jsxs","App","currentPage","setCurrentPage","isDarkMode","setIsDarkMode","saved","localStorage","getItem","JSON","parse","user","setUser","document","body","classList","add","remove","toggleDarkMode","newDarkMode","setItem","stringify","handlePageChange","page","handleUserLogin","userData","handleLogout","renderCurrentPage","onUserLogin","onLogout","className","children","onPageChange","onToggleDarkMode"],"sources":["/Users/bijoux/code/Typing-Game/typing-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TypingGame from './TypingGame';\nimport Navbar from './components/Navbar';\nimport LeaderboardPage from './components/LeaderboardPage';\nimport './App.css';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('game');\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const saved = localStorage.getItem('darkMode');\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleUserLogin = (userData) => {\n    setUser(userData);\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setCurrentPage('game');\n  };\n\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case 'leaderboard':\n        return <LeaderboardPage isDarkMode={isDarkMode} />;\n      case 'game':\n      default:\n        return (\n          <TypingGame \n            isDarkMode={isDarkMode}\n            onUserLogin={handleUserLogin}\n            user={user}\n            onLogout={handleLogout}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar \n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        isDarkMode={isDarkMode}\n        onToggleDarkMode={toggleDarkMode}\n        user={user}\n        onLogout={handleLogout}\n      />\n      {renderCurrentPage()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,MAAM,CAAC,CACtD,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,IAAM,CACjD,KAAM,CAAAc,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC9C,MAAO,CAAAF,KAAK,CAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAG,KAAK,CAC1C,CAAC,CAAC,CACF,KAAM,CAACK,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,GAAIW,UAAU,CAAE,CACdS,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC7C,CACF,CAAC,CAAE,CAACb,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAc,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,WAAW,CAAG,CAACf,UAAU,CAC/BC,aAAa,CAACc,WAAW,CAAC,CAC1BZ,YAAY,CAACa,OAAO,CAAC,UAAU,CAAEX,IAAI,CAACY,SAAS,CAACF,WAAW,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAIC,IAAI,EAAK,CACjCpB,cAAc,CAACoB,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAC,eAAe,CAAIC,QAAQ,EAAK,CACpCb,OAAO,CAACa,QAAQ,CAAC,CACnB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBd,OAAO,CAAC,IAAI,CAAC,CACbT,cAAc,CAAC,MAAM,CAAC,CACxB,CAAC,CAED,KAAM,CAAAwB,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,OAAQzB,WAAW,EACjB,IAAK,aAAa,CAChB,mBAAOJ,IAAA,CAACF,eAAe,EAACQ,UAAU,CAAEA,UAAW,CAAE,CAAC,CACpD,IAAK,MAAM,CACX,QACE,mBACEN,IAAA,CAACJ,UAAU,EACTU,UAAU,CAAEA,UAAW,CACvBwB,WAAW,CAAEJ,eAAgB,CAC7Bb,IAAI,CAAEA,IAAK,CACXkB,QAAQ,CAAEH,YAAa,CACxB,CAAC,CAER,CACF,CAAC,CAED,mBACE1B,KAAA,QAAK8B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBjC,IAAA,CAACH,MAAM,EACLO,WAAW,CAAEA,WAAY,CACzB8B,YAAY,CAAEV,gBAAiB,CAC/BlB,UAAU,CAAEA,UAAW,CACvB6B,gBAAgB,CAAEf,cAAe,CACjCP,IAAI,CAAEA,IAAK,CACXkB,QAAQ,CAAEH,YAAa,CACxB,CAAC,CACDC,iBAAiB,CAAC,CAAC,EACjB,CAAC,CAEV,CAEA,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}