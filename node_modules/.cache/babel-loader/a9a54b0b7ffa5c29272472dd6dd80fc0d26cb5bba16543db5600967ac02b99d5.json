{"ast":null,"code":"var _jsxFileName = \"/Users/bijoux/code/Typing-Game/typing-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TypingGame from './TypingGame';\nimport Navbar from './components/Navbar';\nimport LeaderboardPage from './components/LeaderboardPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('game');\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const saved = localStorage.getItem('darkMode');\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleUserLogin = userData => {\n    setUser(userData);\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setCurrentPage('game');\n  };\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case 'leaderboard':\n        return /*#__PURE__*/_jsxDEV(LeaderboardPage, {\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this);\n      case 'game':\n      default:\n        return /*#__PURE__*/_jsxDEV(TypingGame, {\n          isDarkMode: isDarkMode,\n          onUserLogin: handleUserLogin,\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentPage: currentPage,\n      onPageChange: handlePageChange,\n      isDarkMode: isDarkMode,\n      onToggleDarkMode: toggleDarkMode,\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), renderCurrentPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HzkbagLWvFqwH0Q7WEqCGQivEX8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TypingGame","Navbar","LeaderboardPage","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","isDarkMode","setIsDarkMode","saved","localStorage","getItem","JSON","parse","user","setUser","document","body","classList","add","remove","toggleDarkMode","newDarkMode","setItem","stringify","handlePageChange","page","handleUserLogin","userData","handleLogout","renderCurrentPage","fileName","_jsxFileName","lineNumber","columnNumber","onUserLogin","onLogout","className","children","onPageChange","onToggleDarkMode","_c","$RefreshReg$"],"sources":["/Users/bijoux/code/Typing-Game/typing-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TypingGame from './TypingGame';\nimport Navbar from './components/Navbar';\nimport LeaderboardPage from './components/LeaderboardPage';\nimport './App.css';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('game');\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const saved = localStorage.getItem('darkMode');\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleUserLogin = (userData) => {\n    setUser(userData);\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setCurrentPage('game');\n  };\n\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case 'leaderboard':\n        return <LeaderboardPage isDarkMode={isDarkMode} />;\n      case 'game':\n      default:\n        return (\n          <TypingGame \n            isDarkMode={isDarkMode}\n            onUserLogin={handleUserLogin}\n            user={user}\n            onLogout={handleLogout}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar \n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        isDarkMode={isDarkMode}\n        onToggleDarkMode={toggleDarkMode}\n        user={user}\n        onLogout={handleLogout}\n      />\n      {renderCurrentPage()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}