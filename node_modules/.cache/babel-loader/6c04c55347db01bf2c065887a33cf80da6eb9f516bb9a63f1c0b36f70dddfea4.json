{"ast":null,"code":"var _jsxFileName = \"/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js\",\n  _s = $RefreshSig$();\n//TypingGame.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport apiService from './services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sentences = [\"Mistress Bijoux controls me.\", \"Mistress Bijoux is my entire life.\", \"Gooning for Mistress Bijoux is my religion.\", \"I vow to always be a good gooner for Mistress Bijoux.\", \"Worshipping Mistress Bijoux is my duty as Her servant.\", \"I will always obey Mistress Bijoux.\", \"My job is to please Mistress Bijoux.\", \"Mistress Bijoux is the reason I exist.\", \"My skills as a servant must be used to please Mistress Bijoux.\", \"I will always be a good servant for Mistress Bijoux.\"];\nconst TypingGame = () => {\n  _s();\n  const [sentence, setSentence] = useState('');\n  const [input, setInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(60);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [user, setUser] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [sentencesCompleted, setSentencesCompleted] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [showUserForm, setShowUserForm] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogin, setIsLogin] = useState(false);\n  const [stats, setStats] = useState(null);\n  const generateRandomSentence = () => {\n    const randomIndex = Math.floor(Math.random() * sentences.length);\n    setSentence(sentences[randomIndex]);\n  };\n  const startGame = useCallback(() => {\n    generateRandomSentence();\n    setTime(60);\n    setIsGameOver(false);\n  }, []);\n  useEffect(() => {\n    if (isGameStarted) {\n      startGame();\n    }\n  }, [isGameStarted, startGame]);\n  useEffect(() => {\n    if (time > 0 && !isGameOver && isGameStarted) {\n      const timer = setTimeout(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (time === 0 && isGameStarted) {\n      setIsGameOver(true);\n    }\n  }, [time, isGameOver, isGameStarted]);\n  const handleChange = e => {\n    if (!isGameOver && isGameStarted) {\n      setInput(e.target.value);\n      if (e.target.value === sentence) {\n        const newScore = score + 1;\n        const newSentencesCompleted = sentencesCompleted + 1;\n        setScore(newScore);\n        setSentencesCompleted(newSentencesCompleted);\n        setInput('');\n\n        // Save sentence attempt to database\n        if (sessionId) {\n          const timeTaken = Date.now() - startTime;\n          apiService.saveSentenceAttempt(sessionId, sentence, e.target.value, true, timeTaken);\n        }\n        generateRandomSentence();\n      }\n    }\n  };\n  const handleStartGame = async () => {\n    if (!user) {\n      // Create user if not exists\n      try {\n        const newUser = await apiService.createUser(username);\n        setUser(newUser);\n        setShowUserForm(false);\n      } catch (error) {\n        console.error('Error creating user:', error);\n        return;\n      }\n    }\n    setIsGameStarted(true);\n    setStartTime(Date.now());\n\n    // Create game session\n    if (user) {\n      try {\n        const session = await apiService.createGameSession(user.id, {\n          score: 0,\n          timeLeft: 60,\n          sentencesCompleted: 0,\n          accuracy: 0,\n          wpm: 0\n        });\n        setSessionId(session.id);\n      } catch (error) {\n        console.error('Error creating session:', error);\n      }\n    }\n  };\n  const handleUserSubmit = async e => {\n    e.preventDefault();\n    if (username.trim()) {\n      try {\n        const newUser = await apiService.createUser(username.trim());\n        setUser(newUser);\n        setShowUserForm(false);\n      } catch (error) {\n        console.error('Error creating user:', error);\n      }\n    }\n  };\n  const loadUserStats = useCallback(async () => {\n    if (user) {\n      try {\n        const userStats = await apiService.getUserStats(user.id);\n        setStats(userStats);\n      } catch (error) {\n        console.error('Error loading stats:', error);\n      }\n    }\n  }, [user]);\n  const saveGameSession = useCallback(async () => {\n    if (user && sessionId) {\n      const wpm = sentencesCompleted > 0 ? sentencesCompleted * 60 / (60 - time) : 0;\n      const accuracy = sentencesCompleted > 0 ? sentencesCompleted / (sentencesCompleted + 0) * 100 : 0;\n      try {\n        await apiService.createGameSession(user.id, {\n          score,\n          timeLeft: time,\n          sentencesCompleted,\n          accuracy,\n          wpm\n        });\n      } catch (error) {\n        console.error('Error saving session:', error);\n      }\n    }\n  }, [user, sessionId, sentencesCompleted, time, score]);\n  useEffect(() => {\n    if (isGameOver && user) {\n      saveGameSession();\n      loadUserStats();\n    }\n  }, [isGameOver, user, saveGameSession, loadUserStats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Affirmations for Mistress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), showUserForm && !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUserSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Your name...\",\n          className: \"input-field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"start-button\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this), user && !isGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Statistics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Best Score: \", stats.best_score || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average WPM: \", Math.round(stats.avg_wpm || 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Sessions: \", stats.total_sessions || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        className: \"start-button\",\n        children: \"Begin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this), isGameStarted && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Left: \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this), !isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleChange,\n          className: \"input-field\",\n          placeholder: \"Type here...\",\n          autoFocus: true,\n          disabled: isGameOver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Work harder.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sentences Completed: \", sentencesCompleted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setScore(0);\n          setSentencesCompleted(0);\n          setTime(60);\n          setIsGameOver(false);\n          setIsGameStarted(false);\n          setInput('');\n        },\n        className: \"start-button\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingGame, \"5kZ4EmiUKgW/Vm+W0Murfn+3/eI=\");\n_c = TypingGame;\nexport default TypingGame;\nvar _c;\n$RefreshReg$(_c, \"TypingGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","sentences","TypingGame","_s","sentence","setSentence","input","setInput","score","setScore","time","setTime","isGameOver","setIsGameOver","isGameStarted","setIsGameStarted","user","setUser","sessionId","setSessionId","sentencesCompleted","setSentencesCompleted","startTime","setStartTime","showUserForm","setShowUserForm","username","setUsername","password","setPassword","isLogin","setIsLogin","stats","setStats","generateRandomSentence","randomIndex","Math","floor","random","length","startGame","timer","setTimeout","prevTime","clearTimeout","handleChange","e","target","value","newScore","newSentencesCompleted","timeTaken","Date","now","saveSentenceAttempt","handleStartGame","newUser","createUser","error","console","session","createGameSession","id","timeLeft","accuracy","wpm","handleUserSubmit","preventDefault","trim","loadUserStats","userStats","getUserStats","saveGameSession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","best_score","round","avg_wpm","total_sessions","onClick","autoFocus","disabled","_c","$RefreshReg$"],"sources":["/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js"],"sourcesContent":["//TypingGame.js\nimport React, {\n    useState,\n    useEffect,\n    useCallback\n} from 'react';\nimport './App.css';\nimport apiService from './services/api';\n\nconst sentences = [\n    \"Mistress Bijoux controls me.\",\n    \"Mistress Bijoux is my entire life.\",\n    \"Gooning for Mistress Bijoux is my religion.\",\n    \"I vow to always be a good gooner for Mistress Bijoux.\",\n    \"Worshipping Mistress Bijoux is my duty as Her servant.\",\n    \"I will always obey Mistress Bijoux.\",\n    \"My job is to please Mistress Bijoux.\",\n    \"Mistress Bijoux is the reason I exist.\",\n    \"My skills as a servant must be used to please Mistress Bijoux.\",\n    \"I will always be a good servant for Mistress Bijoux.\",\n];\n\nconst TypingGame = () => {\n    const [sentence, setSentence] = useState('');\n    const [input, setInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [time, setTime] = useState(60);\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [isGameStarted, setIsGameStarted] = useState(false);\n    const [user, setUser] = useState(null);\n    const [sessionId, setSessionId] = useState(null);\n    const [sentencesCompleted, setSentencesCompleted] = useState(0);\n    const [startTime, setStartTime] = useState(null);\n    const [showUserForm, setShowUserForm] = useState(true);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLogin, setIsLogin] = useState(false);\n    const [stats, setStats] = useState(null);\n\n    const generateRandomSentence = () => {\n        const randomIndex = Math.floor(Math.random() * sentences.length);\n        setSentence(sentences[randomIndex]);\n    };\n\n    const startGame = useCallback(() => {\n        generateRandomSentence();\n        setTime(60);\n        setIsGameOver(false);\n    }, []);\n\n    useEffect(() => {\n        if (isGameStarted) {\n            startGame();\n        }\n    }, [isGameStarted, startGame]);\n\n    useEffect(() => {\n        if (time > 0 && !isGameOver && isGameStarted) {\n            const timer = setTimeout(() => {\n                setTime((prevTime) => prevTime - 1);\n            }, 1000);\n\n            return () => clearTimeout(timer);\n        } else if (time === 0 && isGameStarted) {\n            setIsGameOver(true);\n        }\n    }, [time, isGameOver, isGameStarted]);\n\n    const handleChange = (e) => {\n        if (!isGameOver && isGameStarted) {\n            setInput(e.target.value);\n            if (e.target.value === sentence) {\n                const newScore = score + 1;\n                const newSentencesCompleted = sentencesCompleted + 1;\n                setScore(newScore);\n                setSentencesCompleted(newSentencesCompleted);\n                setInput('');\n                \n                // Save sentence attempt to database\n                if (sessionId) {\n                    const timeTaken = Date.now() - startTime;\n                    apiService.saveSentenceAttempt(\n                        sessionId,\n                        sentence,\n                        e.target.value,\n                        true,\n                        timeTaken\n                    );\n                }\n                \n                generateRandomSentence();\n            }\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!user) {\n            // Create user if not exists\n            try {\n                const newUser = await apiService.createUser(username);\n                setUser(newUser);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error creating user:', error);\n                return;\n            }\n        }\n        \n        setIsGameStarted(true);\n        setStartTime(Date.now());\n        \n        // Create game session\n        if (user) {\n            try {\n                const session = await apiService.createGameSession(user.id, {\n                    score: 0,\n                    timeLeft: 60,\n                    sentencesCompleted: 0,\n                    accuracy: 0,\n                    wpm: 0\n                });\n                setSessionId(session.id);\n            } catch (error) {\n                console.error('Error creating session:', error);\n            }\n        }\n    };\n\n    const handleUserSubmit = async (e) => {\n        e.preventDefault();\n        if (username.trim()) {\n            try {\n                const newUser = await apiService.createUser(username.trim());\n                setUser(newUser);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error creating user:', error);\n            }\n        }\n    };\n\n    const loadUserStats = useCallback(async () => {\n        if (user) {\n            try {\n                const userStats = await apiService.getUserStats(user.id);\n                setStats(userStats);\n            } catch (error) {\n                console.error('Error loading stats:', error);\n            }\n        }\n    }, [user]);\n\n    const saveGameSession = useCallback(async () => {\n        if (user && sessionId) {\n            const wpm = sentencesCompleted > 0 ? (sentencesCompleted * 60) / (60 - time) : 0;\n            const accuracy = sentencesCompleted > 0 ? (sentencesCompleted / (sentencesCompleted + 0)) * 100 : 0;\n            \n            try {\n                await apiService.createGameSession(user.id, {\n                    score,\n                    timeLeft: time,\n                    sentencesCompleted,\n                    accuracy,\n                    wpm\n                });\n            } catch (error) {\n                console.error('Error saving session:', error);\n            }\n        }\n    }, [user, sessionId, sentencesCompleted, time, score]);\n\n    useEffect(() => {\n        if (isGameOver && user) {\n            saveGameSession();\n            loadUserStats();\n        }\n    }, [isGameOver, user, saveGameSession, loadUserStats]);\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Affirmations for Mistress</h1>\n            \n            {showUserForm && !user && (\n                <div className=\"user-form\">\n                    <h2>Enter Your Name</h2>\n                    <form onSubmit={handleUserSubmit}>\n                        <input\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            placeholder=\"Your name...\"\n                            className=\"input-field\"\n                            required\n                        />\n                        <button type=\"submit\" className=\"start-button\">\n                            Continue\n                        </button>\n                    </form>\n                </div>\n            )}\n\n            {user && !isGameStarted && (\n                <div className=\"game-info\">\n                    <p>Welcome, {user.username}!</p>\n                    {stats && (\n                        <div className=\"stats\">\n                            <h3>Your Statistics:</h3>\n                            <p>Best Score: {stats.best_score || 0}</p>\n                            <p>Average WPM: {Math.round(stats.avg_wpm || 0)}</p>\n                            <p>Total Sessions: {stats.total_sessions || 0}</p>\n                        </div>\n                    )}\n                    <button onClick={handleStartGame} className=\"start-button\">\n                        Begin\n                    </button>\n                </div>\n            )}\n\n            {isGameStarted && (\n                <>\n                    <div className=\"timer\">Time Left: {time}</div>\n                    <div className=\"sentence\">{sentence}</div>\n                    {!isGameOver && (\n                        <div className=\"input-container\">\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={handleChange}\n                                className=\"input-field\"\n                                placeholder=\"Type here...\"\n                                autoFocus\n                                disabled={isGameOver}\n                            />\n                        </div>\n                    )}\n                </>\n            )}\n            \n            {isGameOver && (\n                <div className=\"game-over\">\n                    <p>Work harder.</p>\n                    <p>Your Score: {score}</p>\n                    <p>Sentences Completed: {sentencesCompleted}</p>\n                    <button \n                        onClick={() => {\n                            setScore(0);\n                            setSentencesCompleted(0);\n                            setTime(60);\n                            setIsGameOver(false);\n                            setIsGameStarted(false);\n                            setInput('');\n                        }} \n                        className=\"start-button\"\n                    >\n                        Play Again\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TypingGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}