{"ast":null,"code":"var _jsxFileName = \"/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js\",\n  _s = $RefreshSig$();\n//TypingGame.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport apiService from './services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sentences = [\"Mistress Bijoux controls me.\", \"Mistress Bijoux is my entire life.\", \"Gooning for Mistress Bijoux is my religion.\", \"I vow to always be a good gooner for Mistress Bijoux.\", \"Worshipping Mistress Bijoux is my duty as Her servant.\", \"I will always obey Mistress Bijoux.\", \"My job is to please Mistress Bijoux.\", \"Mistress Bijoux is the reason I exist.\", \"My skills as a servant must be used to please Mistress Bijoux.\", \"I will always be a good servant for Mistress Bijoux.\", \"Mistress Bijoux can do anything she wants.\", \"Mistress Bijoux is the best.\", \"Mistress Bijoux is the most beautiful Woman in the world.\", \"Mistress Bijoux is the most powerful Woman in the world.\", \"Mistress Bijoux is the most intelligent Woman in the world.\", \"Mistress Bijoux is the most powerful Woman in the world.\", \"My religion is Bijouxism.\", \"I vow to remain chaste for Mistress Bijoux for as long as She wishes.\", \"I vow to remain faithful to Mistress Bijoux for as long as She wishes.\", \"I vow to remain loyal to Mistress Bijoux for as long as She wishes.\", \"I vow to remain obedient to Mistress Bijoux for as long as She wishes.\", \"I vow to remain submissive to Mistress Bijoux for as long as She wishes.\", \"I vow to remain humble to Mistress Bijoux for as long as She wishes.\", \"I vow to remain respectful to Mistress Bijoux for as long as She wishes.\", \"Mistress Bijoux will always be happy, even at my own expense.\", \"Mistress Bijoux controls my diet, exercise and lifestyle.\", \"It is ok to use intoxicants if it pleases Mistress Bijoux.\", \"My duty is to sacrifice my own comfort and happiness for Mistress Bijoux.\", \"Mistress Bijoux's wants are more important than my needs.\", \"I will always save money so that Mistress Bijoux can have more.\", \"Mistress Bijoux is my Mistress forever.\", \"I am forever grateful for My Mistress for allowing me to be her servant.\", \"I am constantly at the mercy of My Mistress.\", \"I am eternally ready to sacrifice my needs for Mistress' pleasure.\", \"I am forever bound to Mistress Bijoux.\", \"I am forever loyal to Mistress Bijoux.\", \"I am forever faithful to Mistress Bijoux.\", \"I am forever obedient to Mistress Bijoux.\", \"I am forever submissive to Mistress Bijoux.\", \"I am forever humble to Mistress Bijoux.\", \"I am forever respectful to Mistress Bijoux.\", \"I vow to always communicate my feelings to Mistress Bijoux.\", \"I vow to always communicate my desires to Mistress Bijoux.\", \"I vow to always communicate my needs to Mistress Bijoux.\", \"I vow to always communicate my wants to Mistress Bijoux.\", \"I vow to always communicate my thoughts to Mistress Bijoux.\", \"I vow to always communicate my emotions to Mistress Bijoux.\", \"I vow to always communicate my desires to Mistress Bijoux.\", \"I will constantly find ways to better serve Mistress Bijoux.\"];\nconst TypingGame = ({\n  isDarkMode,\n  onUserLogin,\n  user,\n  onLogout\n}) => {\n  _s();\n  const [sentence, setSentence] = useState('');\n  const [input, setInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(60);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [sentencesCompleted, setSentencesCompleted] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [showUserForm, setShowUserForm] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogin, setIsLogin] = useState(false);\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [stats, setStats] = useState(null);\n  const generateRandomSentence = () => {\n    const randomIndex = Math.floor(Math.random() * sentences.length);\n    setSentence(sentences[randomIndex]);\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const handleLogout = () => {\n    setSessionId(null);\n    setStats(null);\n    setShowUserForm(true);\n    setUsername('');\n    setPassword('');\n    setIsLogin(false);\n    setIsGameStarted(false);\n    setIsGameOver(false);\n    setScore(0);\n    setSentencesCompleted(0);\n    setInput('');\n    setSentence('');\n    onLogout();\n  };\n  const startGame = useCallback(() => {\n    generateRandomSentence();\n    setTime(60);\n    setIsGameOver(false);\n  }, []);\n  useEffect(() => {\n    if (isGameStarted) {\n      startGame();\n    }\n  }, [isGameStarted, startGame]);\n  useEffect(() => {\n    if (time > 0 && !isGameOver && isGameStarted) {\n      const timer = setTimeout(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (time === 0 && isGameStarted) {\n      setIsGameOver(true);\n    }\n  }, [time, isGameOver, isGameStarted]);\n  const triggerCelebration = () => {\n    setShowCelebration(true);\n    // Reset celebration after animation completes\n    setTimeout(() => setShowCelebration(false), 800);\n  };\n  const handleChange = e => {\n    if (!isGameOver && isGameStarted) {\n      setInput(e.target.value);\n      if (e.target.value === sentence) {\n        const newScore = score + 1;\n        const newSentencesCompleted = sentencesCompleted + 1;\n        setScore(newScore);\n        setSentencesCompleted(newSentencesCompleted);\n        setInput('');\n\n        // Trigger celebration effects!\n        triggerCelebration();\n\n        // Save sentence attempt to database\n        if (sessionId) {\n          const timeTaken = Date.now() - startTime;\n          apiService.saveSentenceAttempt(sessionId, sentence, e.target.value, true, timeTaken);\n        }\n        generateRandomSentence();\n      }\n    }\n  };\n  const handleStartGame = async () => {\n    if (!user) {\n      // Create user if not exists\n      try {\n        const newUser = await apiService.createUser(username);\n        onUserLogin(newUser);\n        setShowUserForm(false);\n      } catch (error) {\n        console.error('Error creating user:', error);\n        return;\n      }\n    }\n    setIsGameStarted(true);\n    setStartTime(Date.now());\n\n    // Create game session\n    if (user) {\n      try {\n        const session = await apiService.createGameSession(user.id, {\n          score: 0,\n          timeLeft: 60,\n          sentencesCompleted: 0,\n          accuracy: 0,\n          wpm: 0\n        });\n        setSessionId(session.id);\n      } catch (error) {\n        console.error('Error creating session:', error);\n      }\n    }\n  };\n  const handleUserSubmit = async e => {\n    e.preventDefault();\n    if (username.trim() && password.trim()) {\n      try {\n        let userData;\n        if (isLogin) {\n          userData = await apiService.loginUser(username.trim(), password);\n        } else {\n          userData = await apiService.createUser(username.trim(), password);\n        }\n        console.log('User data received:', userData);\n        onUserLogin(userData);\n        setShowUserForm(false);\n      } catch (error) {\n        console.error('Error with user authentication:', error);\n        alert(error.message || 'Authentication failed');\n      }\n    }\n  };\n  const loadUserStats = useCallback(async () => {\n    if (user) {\n      try {\n        const userStats = await apiService.getUserStats(user.id);\n        setStats(userStats);\n      } catch (error) {\n        console.error('Error loading stats:', error);\n      }\n    }\n  }, [user]);\n  const saveGameSession = useCallback(async () => {\n    if (user && sessionId) {\n      const wpm = sentencesCompleted > 0 ? sentencesCompleted * 60 / (60 - time) : 0;\n      const accuracy = sentencesCompleted > 0 ? sentencesCompleted / (sentencesCompleted + 0) * 100 : 0;\n      try {\n        await apiService.createGameSession(user.id, {\n          score,\n          timeLeft: time,\n          sentencesCompleted,\n          accuracy,\n          wpm\n        });\n      } catch (error) {\n        console.error('Error saving session:', error);\n      }\n    }\n  }, [user, sessionId, sentencesCompleted, time, score]);\n  useEffect(() => {\n    if (isGameOver && user) {\n      saveGameSession();\n      loadUserStats();\n    }\n  }, [isGameOver, user, saveGameSession, loadUserStats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${showCelebration ? 'shake' : ''}`,\n    children: [showCelebration && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confetti-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }, this), showUserForm && !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Create Account'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUserSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Username...\",\n          className: \"input-field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password...\",\n          className: \"input-field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"start-button\",\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsLogin(!isLogin),\n          className: \"start-button\",\n          children: isLogin ? 'Need an account? Register' : 'Have an account? Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this), user && !isGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Affirmations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", user.username || 'User', \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Statistics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Best Score: \", stats.best_score || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average WPM: \", Math.round(stats.avg_wpm || 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Sessions: \", stats.total_sessions || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartGame,\n          className: \"start-button\",\n          children: \"Begin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }, this), isGameStarted && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Left: \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this), !isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleChange,\n          className: \"input-field\",\n          placeholder: \"Type here...\",\n          autoFocus: true,\n          disabled: isGameOver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), isGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"affirmations-left\",\n      children: [\"Affirmations Left: \", sentences.length - sentencesCompleted]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"Affirmations Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Work harder next time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sentences Completed: \", sentencesCompleted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setScore(0);\n              setSentencesCompleted(0);\n              setTime(60);\n              setIsGameOver(false);\n              setIsGameStarted(false);\n              setInput('');\n            },\n            className: \"start-button\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingGame, \"F2AXv8zR47iKzDfZuNzTI4BoYo4=\");\n_c = TypingGame;\nexport default TypingGame;\nvar _c;\n$RefreshReg$(_c, \"TypingGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","sentences","TypingGame","isDarkMode","onUserLogin","user","onLogout","_s","sentence","setSentence","input","setInput","score","setScore","time","setTime","isGameOver","setIsGameOver","isGameStarted","setIsGameStarted","sessionId","setSessionId","sentencesCompleted","setSentencesCompleted","startTime","setStartTime","showUserForm","setShowUserForm","username","setUsername","password","setPassword","isLogin","setIsLogin","showCelebration","setShowCelebration","stats","setStats","generateRandomSentence","randomIndex","Math","floor","random","length","handleLogout","startGame","timer","setTimeout","prevTime","clearTimeout","triggerCelebration","handleChange","e","target","value","newScore","newSentencesCompleted","timeTaken","Date","now","saveSentenceAttempt","handleStartGame","newUser","createUser","error","console","session","createGameSession","id","timeLeft","accuracy","wpm","handleUserSubmit","preventDefault","trim","userData","loginUser","log","alert","message","loadUserStats","userStats","getUserStats","saveGameSession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","onClick","best_score","round","avg_wpm","total_sessions","autoFocus","disabled","_c","$RefreshReg$"],"sources":["/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js"],"sourcesContent":["//TypingGame.js\nimport React, {\n    useState,\n    useEffect,\n    useCallback\n} from 'react';\nimport './App.css';\nimport apiService from './services/api';\n\nconst sentences = [\n    \"Mistress Bijoux controls me.\",\n    \"Mistress Bijoux is my entire life.\",\n    \"Gooning for Mistress Bijoux is my religion.\",\n    \"I vow to always be a good gooner for Mistress Bijoux.\",\n    \"Worshipping Mistress Bijoux is my duty as Her servant.\",\n    \"I will always obey Mistress Bijoux.\",\n    \"My job is to please Mistress Bijoux.\",\n    \"Mistress Bijoux is the reason I exist.\",\n    \"My skills as a servant must be used to please Mistress Bijoux.\",\n    \"I will always be a good servant for Mistress Bijoux.\",\n    \"Mistress Bijoux can do anything she wants.\",\n    \"Mistress Bijoux is the best.\",\n    \"Mistress Bijoux is the most beautiful Woman in the world.\",\n    \"Mistress Bijoux is the most powerful Woman in the world.\",\n    \"Mistress Bijoux is the most intelligent Woman in the world.\",\n    \"Mistress Bijoux is the most powerful Woman in the world.\",\n    \"My religion is Bijouxism.\",\n    \"I vow to remain chaste for Mistress Bijoux for as long as She wishes.\",\n    \"I vow to remain faithful to Mistress Bijoux for as long as She wishes.\",\n    \"I vow to remain loyal to Mistress Bijoux for as long as She wishes.\",\n    \"I vow to remain obedient to Mistress Bijoux for as long as She wishes.\",\n    \"I vow to remain submissive to Mistress Bijoux for as long as She wishes.\",\n    \"I vow to remain humble to Mistress Bijoux for as long as She wishes.\",\n    \"I vow to remain respectful to Mistress Bijoux for as long as She wishes.\",\n    \"Mistress Bijoux will always be happy, even at my own expense.\",\n    \"Mistress Bijoux controls my diet, exercise and lifestyle.\",\n    \"It is ok to use intoxicants if it pleases Mistress Bijoux.\",\n    \"My duty is to sacrifice my own comfort and happiness for Mistress Bijoux.\",\n    \"Mistress Bijoux's wants are more important than my needs.\",\n    \"I will always save money so that Mistress Bijoux can have more.\",\n    \"Mistress Bijoux is my Mistress forever.\",\n    \"I am forever grateful for My Mistress for allowing me to be her servant.\",\n    \"I am constantly at the mercy of My Mistress.\",\n    \"I am eternally ready to sacrifice my needs for Mistress' pleasure.\",\n    \"I am forever bound to Mistress Bijoux.\",\n    \"I am forever loyal to Mistress Bijoux.\",\n    \"I am forever faithful to Mistress Bijoux.\",\n    \"I am forever obedient to Mistress Bijoux.\",\n    \"I am forever submissive to Mistress Bijoux.\",\n    \"I am forever humble to Mistress Bijoux.\",\n    \"I am forever respectful to Mistress Bijoux.\",\n    \"I vow to always communicate my feelings to Mistress Bijoux.\",\n    \"I vow to always communicate my desires to Mistress Bijoux.\",\n    \"I vow to always communicate my needs to Mistress Bijoux.\",\n    \"I vow to always communicate my wants to Mistress Bijoux.\",\n    \"I vow to always communicate my thoughts to Mistress Bijoux.\",\n    \"I vow to always communicate my emotions to Mistress Bijoux.\",\n    \"I vow to always communicate my desires to Mistress Bijoux.\",\n    \"I will constantly find ways to better serve Mistress Bijoux.\",\n];\n\nconst TypingGame = ({ isDarkMode, onUserLogin, user, onLogout }) => {\n    const [sentence, setSentence] = useState('');\n    const [input, setInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [time, setTime] = useState(60);\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [isGameStarted, setIsGameStarted] = useState(false);\n    const [sessionId, setSessionId] = useState(null);\n    const [sentencesCompleted, setSentencesCompleted] = useState(0);\n    const [startTime, setStartTime] = useState(null);\n    const [showUserForm, setShowUserForm] = useState(true);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLogin, setIsLogin] = useState(false);\n    const [showCelebration, setShowCelebration] = useState(false);\n    const [stats, setStats] = useState(null);\n\n    const generateRandomSentence = () => {\n        const randomIndex = Math.floor(Math.random() * sentences.length);\n        setSentence(sentences[randomIndex]);\n    };\n\n    // eslint-disable-next-line no-unused-vars\n    const handleLogout = () => {\n        setSessionId(null);\n        setStats(null);\n        setShowUserForm(true);\n        setUsername('');\n        setPassword('');\n        setIsLogin(false);\n        setIsGameStarted(false);\n        setIsGameOver(false);\n        setScore(0);\n        setSentencesCompleted(0);\n        setInput('');\n        setSentence('');\n        onLogout();\n    };\n\n    const startGame = useCallback(() => {\n        generateRandomSentence();\n        setTime(60);\n        setIsGameOver(false);\n    }, []);\n\n    useEffect(() => {\n        if (isGameStarted) {\n            startGame();\n        }\n    }, [isGameStarted, startGame]);\n\n    useEffect(() => {\n        if (time > 0 && !isGameOver && isGameStarted) {\n            const timer = setTimeout(() => {\n                setTime((prevTime) => prevTime - 1);\n            }, 1000);\n\n            return () => clearTimeout(timer);\n        } else if (time === 0 && isGameStarted) {\n            setIsGameOver(true);\n        }\n    }, [time, isGameOver, isGameStarted]);\n\n    const triggerCelebration = () => {\n        setShowCelebration(true);\n        // Reset celebration after animation completes\n        setTimeout(() => setShowCelebration(false), 800);\n    };\n\n    const handleChange = (e) => {\n        if (!isGameOver && isGameStarted) {\n            setInput(e.target.value);\n            if (e.target.value === sentence) {\n                const newScore = score + 1;\n                const newSentencesCompleted = sentencesCompleted + 1;\n                setScore(newScore);\n                setSentencesCompleted(newSentencesCompleted);\n                setInput('');\n\n                // Trigger celebration effects!\n                triggerCelebration();\n\n                // Save sentence attempt to database\n                if (sessionId) {\n                    const timeTaken = Date.now() - startTime;\n                    apiService.saveSentenceAttempt(\n                        sessionId,\n                        sentence,\n                        e.target.value,\n                        true,\n                        timeTaken\n                    );\n                }\n\n                generateRandomSentence();\n            }\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!user) {\n            // Create user if not exists\n            try {\n                const newUser = await apiService.createUser(username);\n                onUserLogin(newUser);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error creating user:', error);\n                return;\n            }\n        }\n\n        setIsGameStarted(true);\n        setStartTime(Date.now());\n\n        // Create game session\n        if (user) {\n            try {\n                const session = await apiService.createGameSession(user.id, {\n                    score: 0,\n                    timeLeft: 60,\n                    sentencesCompleted: 0,\n                    accuracy: 0,\n                    wpm: 0\n                });\n                setSessionId(session.id);\n            } catch (error) {\n                console.error('Error creating session:', error);\n            }\n        }\n    };\n\n    const handleUserSubmit = async (e) => {\n        e.preventDefault();\n        if (username.trim() && password.trim()) {\n            try {\n                let userData;\n                if (isLogin) {\n                    userData = await apiService.loginUser(username.trim(), password);\n                } else {\n                    userData = await apiService.createUser(username.trim(), password);\n                }\n                console.log('User data received:', userData);\n                onUserLogin(userData);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error with user authentication:', error);\n                alert(error.message || 'Authentication failed');\n            }\n        }\n    };\n\n    const loadUserStats = useCallback(async () => {\n        if (user) {\n            try {\n                const userStats = await apiService.getUserStats(user.id);\n                setStats(userStats);\n            } catch (error) {\n                console.error('Error loading stats:', error);\n            }\n        }\n    }, [user]);\n\n    const saveGameSession = useCallback(async () => {\n        if (user && sessionId) {\n            const wpm = sentencesCompleted > 0 ? (sentencesCompleted * 60) / (60 - time) : 0;\n            const accuracy = sentencesCompleted > 0 ? (sentencesCompleted / (sentencesCompleted + 0)) * 100 : 0;\n\n            try {\n                await apiService.createGameSession(user.id, {\n                    score,\n                    timeLeft: time,\n                    sentencesCompleted,\n                    accuracy,\n                    wpm\n                });\n            } catch (error) {\n                console.error('Error saving session:', error);\n            }\n        }\n    }, [user, sessionId, sentencesCompleted, time, score]);\n\n    useEffect(() => {\n        if (isGameOver && user) {\n            saveGameSession();\n            loadUserStats();\n        }\n    }, [isGameOver, user, saveGameSession, loadUserStats]);\n\n    return (\n        <div className={`container ${showCelebration ? 'shake' : ''}`}>\n            {showCelebration && <div className=\"confetti-container\"></div>}\n            {showUserForm && !user && (\n                <div className=\"user-form\">\n                    <h2>{isLogin ? 'Login' : 'Create Account'}</h2>\n                    <form onSubmit={handleUserSubmit}>\n                        <input\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            placeholder=\"Username...\"\n                            className=\"input-field\"\n                            required\n                        />\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password...\"\n                            className=\"input-field\"\n                            required\n                        />\n                        <button type=\"submit\" className=\"start-button\">\n                            {isLogin ? 'Login' : 'Create Account'}\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsLogin(!isLogin)}\n                            className=\"start-button\"\n                        >\n                            {isLogin ? 'Need an account? Register' : 'Have an account? Login'}\n                        </button>\n                    </form>\n                </div>\n            )}\n\n            {user && !isGameStarted && (\n                <div className=\"game-info\">\n                    <center>\n                <header>Affirmations.</header>\n                <p>Welcome, {user.username || 'User'}!</p>\n                    </center>\n                    {stats && (\n                        <div className=\"stats\">\n                            <h3>Your Statistics:</h3>\n                            <p>Best Score: {stats.best_score || 0}</p>\n                            <p>Average WPM: {Math.round(stats.avg_wpm || 0)}</p>\n                            <p>Total Sessions: {stats.total_sessions || 0}</p>\n                        </div>\n                    )}\n                    <div className=\"game-actions\">\n                        <button onClick={handleStartGame} className=\"start-button\">\n                            Begin\n                        </button>\n                        <br></br>\n                    </div>\n                </div>\n            )}\n\n            {isGameStarted && (\n                <>\n                    <div className=\"timer\">Time Left: {time}</div>\n                    <div className=\"sentence\">{sentence}</div>\n                    {!isGameOver && (\n                        <div className=\"input-container\">\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={handleChange}\n                                className=\"input-field\"\n                                placeholder=\"Type here...\"\n                                autoFocus\n                                disabled={isGameOver}\n                            />\n                        </div>\n                    )}\n                </>\n            )}\n\n            {isGameStarted && (\n                <div className=\"affirmations-left\">Affirmations Left: {sentences.length - sentencesCompleted}</div>\n            )}\n\n            {isGameOver && (\n                <>\n                <header>Affirmations Over</header>\n                    <div className=\"game-over\">\n                        <p>Work harder next time.</p>\n                        <p>Your Score: {score}</p>\n                        <p>Sentences Completed: {sentencesCompleted}</p>\n                        <div className=\"game-over-actions\">\n                            <button\n                                onClick={() => {\n                                    setScore(0);\n                                    setSentencesCompleted(0);\n                                    setTime(60);\n                                    setIsGameOver(false);\n                                    setIsGameStarted(false);\n                                    setInput('');\n                                }}\n                                className=\"start-button\"\n                            >\n                                Play Again\n                            </button>\n                            <br></br>\n                        </div>\n                    </div>\n                </>\n            )}\n\n        </div>\n    );\n};\n\nexport default TypingGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}