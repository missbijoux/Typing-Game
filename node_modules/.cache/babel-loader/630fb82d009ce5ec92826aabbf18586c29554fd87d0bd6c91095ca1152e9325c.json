{"ast":null,"code":"//TypingGame.js\nimport React,{useState,useEffect,useCallback}from'react';import'./App.css';import apiService from'./services/api';import Leaderboard from'./components/Leaderboard';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const sentences=[\"Mistress Bijoux controls me.\",\"Mistress Bijoux is my entire life.\",\"Gooning for Mistress Bijoux is my religion.\",\"I vow to always be a good gooner for Mistress Bijoux.\",\"Worshipping Mistress Bijoux is my duty as Her servant.\",\"I will always obey Mistress Bijoux.\",\"My job is to please Mistress Bijoux.\",\"Mistress Bijoux is the reason I exist.\",\"My skills as a servant must be used to please Mistress Bijoux.\",\"I will always be a good servant for Mistress Bijoux.\"];const TypingGame=()=>{const[sentence,setSentence]=useState('');const[input,setInput]=useState('');const[score,setScore]=useState(0);const[time,setTime]=useState(60);const[isGameOver,setIsGameOver]=useState(false);const[isGameStarted,setIsGameStarted]=useState(false);const[user,setUser]=useState(null);const[sessionId,setSessionId]=useState(null);const[sentencesCompleted,setSentencesCompleted]=useState(0);const[startTime,setStartTime]=useState(null);const[showUserForm,setShowUserForm]=useState(true);const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[isLogin,setIsLogin]=useState(false);const[stats,setStats]=useState(null);const[showLeaderboard,setShowLeaderboard]=useState(false);const[isDarkMode,setIsDarkMode]=useState(()=>{const saved=localStorage.getItem('darkMode');return saved?JSON.parse(saved):false;});const generateRandomSentence=()=>{const randomIndex=Math.floor(Math.random()*sentences.length);setSentence(sentences[randomIndex]);};const toggleDarkMode=()=>{const newDarkMode=!isDarkMode;setIsDarkMode(newDarkMode);localStorage.setItem('darkMode',JSON.stringify(newDarkMode));};// Apply dark mode class to body\nuseEffect(()=>{if(isDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}},[isDarkMode]);const startGame=useCallback(()=>{generateRandomSentence();setTime(60);setIsGameOver(false);},[]);useEffect(()=>{if(isGameStarted){startGame();}},[isGameStarted,startGame]);useEffect(()=>{if(time>0&&!isGameOver&&isGameStarted){const timer=setTimeout(()=>{setTime(prevTime=>prevTime-1);},1000);return()=>clearTimeout(timer);}else if(time===0&&isGameStarted){setIsGameOver(true);}},[time,isGameOver,isGameStarted]);const handleChange=e=>{if(!isGameOver&&isGameStarted){setInput(e.target.value);if(e.target.value===sentence){const newScore=score+1;const newSentencesCompleted=sentencesCompleted+1;setScore(newScore);setSentencesCompleted(newSentencesCompleted);setInput('');// Save sentence attempt to database\nif(sessionId){const timeTaken=Date.now()-startTime;apiService.saveSentenceAttempt(sessionId,sentence,e.target.value,true,timeTaken);}generateRandomSentence();}}};const handleStartGame=async()=>{if(!user){// Create user if not exists\ntry{const newUser=await apiService.createUser(username);setUser(newUser);setShowUserForm(false);}catch(error){console.error('Error creating user:',error);return;}}setIsGameStarted(true);setStartTime(Date.now());// Create game session\nif(user){try{const session=await apiService.createGameSession(user.id,{score:0,timeLeft:60,sentencesCompleted:0,accuracy:0,wpm:0});setSessionId(session.id);}catch(error){console.error('Error creating session:',error);}}};const handleUserSubmit=async e=>{e.preventDefault();if(username.trim()&&password.trim()){try{let userData;if(isLogin){userData=await apiService.loginUser(username.trim(),password);}else{userData=await apiService.createUser(username.trim(),password);}setUser(userData);setShowUserForm(false);}catch(error){console.error('Error with user authentication:',error);alert(error.message||'Authentication failed');}}};const loadUserStats=useCallback(async()=>{if(user){try{const userStats=await apiService.getUserStats(user.id);setStats(userStats);}catch(error){console.error('Error loading stats:',error);}}},[user]);const saveGameSession=useCallback(async()=>{if(user&&sessionId){const wpm=sentencesCompleted>0?sentencesCompleted*60/(60-time):0;const accuracy=sentencesCompleted>0?sentencesCompleted/(sentencesCompleted+0)*100:0;try{await apiService.createGameSession(user.id,{score,timeLeft:time,sentencesCompleted,accuracy,wpm});}catch(error){console.error('Error saving session:',error);}}},[user,sessionId,sentencesCompleted,time,score]);useEffect(()=>{if(isGameOver&&user){saveGameSession();loadUserStats();}},[isGameOver,user,saveGameSession,loadUserStats]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Affirmations\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleDarkMode,className:\"dark-mode-toggle\",title:isDarkMode?'Switch to Light Mode':'Switch to Dark Mode',children:isDarkMode?'☀️':'🌙'})]}),showUserForm&&!user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isLogin?'Login':'Create Account'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUserSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Username...\",className:\"input-field\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Password...\",className:\"input-field\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"start-button\",children:isLogin?'Login':'Create Account'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setIsLogin(!isLogin),className:\"toggle-button\",children:isLogin?'Need an account? Register':'Have an account? Login'})]})]}),user&&!isGameStarted&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Welcome, \",user.username,\"!\"]}),stats&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Statistics:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Best Score: \",stats.best_score||0]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Average WPM: \",Math.round(stats.avg_wpm||0)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Sessions: \",stats.total_sessions||0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleStartGame,className:\"start-button\",children:\"Begin\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowLeaderboard(true),className:\"leaderboard-button\",children:\"\\uD83C\\uDFC6 Leaderboard\"})]})]}),isGameStarted&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Time Left: \",time]}),/*#__PURE__*/_jsx(\"div\",{className:\"sentence\",children:sentence}),!isGameOver&&/*#__PURE__*/_jsx(\"div\",{className:\"input-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleChange,className:\"input-field\",placeholder:\"Type here...\",autoFocus:true,disabled:isGameOver})})]}),isGameOver&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-over\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Work harder.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score: \",score]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Sentences Completed: \",sentencesCompleted]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-over-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setScore(0);setSentencesCompleted(0);setTime(60);setIsGameOver(false);setIsGameStarted(false);setInput('');},className:\"start-button\",children:\"Play Again\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowLeaderboard(true),className:\"leaderboard-button\",children:\"\\uD83C\\uDFC6 Leaderboard\"})]})]}),showLeaderboard&&/*#__PURE__*/_jsx(Leaderboard,{onClose:()=>setShowLeaderboard(false)})]});};export default TypingGame;","map":{"version":3,"names":["React","useState","useEffect","useCallback","apiService","Leaderboard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","sentences","TypingGame","sentence","setSentence","input","setInput","score","setScore","time","setTime","isGameOver","setIsGameOver","isGameStarted","setIsGameStarted","user","setUser","sessionId","setSessionId","sentencesCompleted","setSentencesCompleted","startTime","setStartTime","showUserForm","setShowUserForm","username","setUsername","password","setPassword","isLogin","setIsLogin","stats","setStats","showLeaderboard","setShowLeaderboard","isDarkMode","setIsDarkMode","saved","localStorage","getItem","JSON","parse","generateRandomSentence","randomIndex","Math","floor","random","length","toggleDarkMode","newDarkMode","setItem","stringify","document","body","classList","add","remove","startGame","timer","setTimeout","prevTime","clearTimeout","handleChange","e","target","value","newScore","newSentencesCompleted","timeTaken","Date","now","saveSentenceAttempt","handleStartGame","newUser","createUser","error","console","session","createGameSession","id","timeLeft","accuracy","wpm","handleUserSubmit","preventDefault","trim","userData","loginUser","alert","message","loadUserStats","userStats","getUserStats","saveGameSession","className","children","onClick","title","onSubmit","type","onChange","placeholder","required","best_score","round","avg_wpm","total_sessions","autoFocus","disabled","onClose"],"sources":["/Users/bijoux/code/Typing-Game/typing-game/src/TypingGame.js"],"sourcesContent":["//TypingGame.js\nimport React, {\n    useState,\n    useEffect,\n    useCallback\n} from 'react';\nimport './App.css';\nimport apiService from './services/api';\nimport Leaderboard from './components/Leaderboard';\n\nconst sentences = [\n    \"Mistress Bijoux controls me.\",\n    \"Mistress Bijoux is my entire life.\",\n    \"Gooning for Mistress Bijoux is my religion.\",\n    \"I vow to always be a good gooner for Mistress Bijoux.\",\n    \"Worshipping Mistress Bijoux is my duty as Her servant.\",\n    \"I will always obey Mistress Bijoux.\",\n    \"My job is to please Mistress Bijoux.\",\n    \"Mistress Bijoux is the reason I exist.\",\n    \"My skills as a servant must be used to please Mistress Bijoux.\",\n    \"I will always be a good servant for Mistress Bijoux.\",\n];\n\nconst TypingGame = () => {\n    const [sentence, setSentence] = useState('');\n    const [input, setInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [time, setTime] = useState(60);\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [isGameStarted, setIsGameStarted] = useState(false);\n    const [user, setUser] = useState(null);\n    const [sessionId, setSessionId] = useState(null);\n    const [sentencesCompleted, setSentencesCompleted] = useState(0);\n    const [startTime, setStartTime] = useState(null);\n    const [showUserForm, setShowUserForm] = useState(true);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLogin, setIsLogin] = useState(false);\n    const [stats, setStats] = useState(null);\n    const [showLeaderboard, setShowLeaderboard] = useState(false);\n    const [isDarkMode, setIsDarkMode] = useState(() => {\n        const saved = localStorage.getItem('darkMode');\n        return saved ? JSON.parse(saved) : false;\n    });\n\n    const generateRandomSentence = () => {\n        const randomIndex = Math.floor(Math.random() * sentences.length);\n        setSentence(sentences[randomIndex]);\n    };\n\n    const toggleDarkMode = () => {\n        const newDarkMode = !isDarkMode;\n        setIsDarkMode(newDarkMode);\n        localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\n    };\n\n    // Apply dark mode class to body\n    useEffect(() => {\n        if (isDarkMode) {\n            document.body.classList.add('dark-mode');\n        } else {\n            document.body.classList.remove('dark-mode');\n        }\n    }, [isDarkMode]);\n\n    const startGame = useCallback(() => {\n        generateRandomSentence();\n        setTime(60);\n        setIsGameOver(false);\n    }, []);\n\n    useEffect(() => {\n        if (isGameStarted) {\n            startGame();\n        }\n    }, [isGameStarted, startGame]);\n\n    useEffect(() => {\n        if (time > 0 && !isGameOver && isGameStarted) {\n            const timer = setTimeout(() => {\n                setTime((prevTime) => prevTime - 1);\n            }, 1000);\n\n            return () => clearTimeout(timer);\n        } else if (time === 0 && isGameStarted) {\n            setIsGameOver(true);\n        }\n    }, [time, isGameOver, isGameStarted]);\n\n    const handleChange = (e) => {\n        if (!isGameOver && isGameStarted) {\n            setInput(e.target.value);\n            if (e.target.value === sentence) {\n                const newScore = score + 1;\n                const newSentencesCompleted = sentencesCompleted + 1;\n                setScore(newScore);\n                setSentencesCompleted(newSentencesCompleted);\n                setInput('');\n                \n                // Save sentence attempt to database\n                if (sessionId) {\n                    const timeTaken = Date.now() - startTime;\n                    apiService.saveSentenceAttempt(\n                        sessionId,\n                        sentence,\n                        e.target.value,\n                        true,\n                        timeTaken\n                    );\n                }\n                \n                generateRandomSentence();\n            }\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!user) {\n            // Create user if not exists\n            try {\n                const newUser = await apiService.createUser(username);\n                setUser(newUser);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error creating user:', error);\n                return;\n            }\n        }\n        \n        setIsGameStarted(true);\n        setStartTime(Date.now());\n        \n        // Create game session\n        if (user) {\n            try {\n                const session = await apiService.createGameSession(user.id, {\n                    score: 0,\n                    timeLeft: 60,\n                    sentencesCompleted: 0,\n                    accuracy: 0,\n                    wpm: 0\n                });\n                setSessionId(session.id);\n            } catch (error) {\n                console.error('Error creating session:', error);\n            }\n        }\n    };\n\n    const handleUserSubmit = async (e) => {\n        e.preventDefault();\n        if (username.trim() && password.trim()) {\n            try {\n                let userData;\n                if (isLogin) {\n                    userData = await apiService.loginUser(username.trim(), password);\n                } else {\n                    userData = await apiService.createUser(username.trim(), password);\n                }\n                setUser(userData);\n                setShowUserForm(false);\n            } catch (error) {\n                console.error('Error with user authentication:', error);\n                alert(error.message || 'Authentication failed');\n            }\n        }\n    };\n\n    const loadUserStats = useCallback(async () => {\n        if (user) {\n            try {\n                const userStats = await apiService.getUserStats(user.id);\n                setStats(userStats);\n            } catch (error) {\n                console.error('Error loading stats:', error);\n            }\n        }\n    }, [user]);\n\n    const saveGameSession = useCallback(async () => {\n        if (user && sessionId) {\n            const wpm = sentencesCompleted > 0 ? (sentencesCompleted * 60) / (60 - time) : 0;\n            const accuracy = sentencesCompleted > 0 ? (sentencesCompleted / (sentencesCompleted + 0)) * 100 : 0;\n            \n            try {\n                await apiService.createGameSession(user.id, {\n                    score,\n                    timeLeft: time,\n                    sentencesCompleted,\n                    accuracy,\n                    wpm\n                });\n            } catch (error) {\n                console.error('Error saving session:', error);\n            }\n        }\n    }, [user, sessionId, sentencesCompleted, time, score]);\n\n    useEffect(() => {\n        if (isGameOver && user) {\n            saveGameSession();\n            loadUserStats();\n        }\n    }, [isGameOver, user, saveGameSession, loadUserStats]);\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <h1 className=\"title\">Affirmations</h1>\n                <button \n                    onClick={toggleDarkMode} \n                    className=\"dark-mode-toggle\"\n                    title={isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n                >\n                    {isDarkMode ? '☀️' : '🌙'}\n                </button>\n            </div>\n            \n            {showUserForm && !user && (\n                <div className=\"user-form\">\n                    <h2>{isLogin ? 'Login' : 'Create Account'}</h2>\n                    <form onSubmit={handleUserSubmit}>\n                        <input\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            placeholder=\"Username...\"\n                            className=\"input-field\"\n                            required\n                        />\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password...\"\n                            className=\"input-field\"\n                            required\n                        />\n                        <button type=\"submit\" className=\"start-button\">\n                            {isLogin ? 'Login' : 'Create Account'}\n                        </button>\n                        <button \n                            type=\"button\" \n                            onClick={() => setIsLogin(!isLogin)}\n                            className=\"toggle-button\"\n                        >\n                            {isLogin ? 'Need an account? Register' : 'Have an account? Login'}\n                        </button>\n                    </form>\n                </div>\n            )}\n\n            {user && !isGameStarted && (\n                <div className=\"game-info\">\n                    <p>Welcome, {user.username}!</p>\n                    {stats && (\n                        <div className=\"stats\">\n                            <h3>Your Statistics:</h3>\n                            <p>Best Score: {stats.best_score || 0}</p>\n                            <p>Average WPM: {Math.round(stats.avg_wpm || 0)}</p>\n                            <p>Total Sessions: {stats.total_sessions || 0}</p>\n                        </div>\n                    )}\n                    <div className=\"game-actions\">\n                        <button onClick={handleStartGame} className=\"start-button\">\n                            Begin\n                        </button>\n                        <br></br>\n                        <button \n                            onClick={() => setShowLeaderboard(true)} \n                            className=\"leaderboard-button\"\n                        >\n                            🏆 Leaderboard\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {isGameStarted && (\n                <>\n                    <div className=\"timer\">Time Left: {time}</div>\n                    <div className=\"sentence\">{sentence}</div>\n                    {!isGameOver && (\n                        <div className=\"input-container\">\n                            <input\n                                type=\"text\"\n                                value={input}\n                                onChange={handleChange}\n                                className=\"input-field\"\n                                placeholder=\"Type here...\"\n                                autoFocus\n                                disabled={isGameOver}\n                            />\n                        </div>\n                    )}\n                </>\n            )}\n            \n            {isGameOver && (\n                <div className=\"game-over\">\n                    <p>Work harder.</p>\n                    <p>Your Score: {score}</p>\n                    <p>Sentences Completed: {sentencesCompleted}</p>\n                    <div className=\"game-over-actions\">\n                        <button \n                            onClick={() => {\n                                setScore(0);\n                                setSentencesCompleted(0);\n                                setTime(60);\n                                setIsGameOver(false);\n                                setIsGameStarted(false);\n                                setInput('');\n                            }} \n                            className=\"start-button\"\n                        >\n                            Play Again\n                        </button>\n                        <br></br>\n                        <button \n                            onClick={() => setShowLeaderboard(true)} \n                            className=\"leaderboard-button\"\n                        >\n                            🏆 Leaderboard\n                        </button>\n                    </div>\n                </div>\n            )}\n            \n            {showLeaderboard && (\n                <Leaderboard onClose={() => setShowLeaderboard(false)} />\n            )}\n        </div>\n    );\n};\n\nexport default TypingGame;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EACRC,QAAQ,CACRC,SAAS,CACTC,WAAW,KACR,OAAO,CACd,MAAO,WAAW,CAClB,MAAO,CAAAC,UAAU,KAAM,gBAAgB,CACvC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEnD,KAAM,CAAAC,SAAS,CAAG,CACd,8BAA8B,CAC9B,oCAAoC,CACpC,6CAA6C,CAC7C,uDAAuD,CACvD,wDAAwD,CACxD,qCAAqC,CACrC,sCAAsC,CACtC,wCAAwC,CACxC,gEAAgE,CAChE,sDAAsD,CACzD,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACmB,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACqB,UAAU,CAAEC,aAAa,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACuB,aAAa,CAAEC,gBAAgB,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACyB,IAAI,CAAEC,OAAO,CAAC,CAAG1B,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAAC2B,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAAC6B,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG9B,QAAQ,CAAC,CAAC,CAAC,CAC/D,KAAM,CAAC+B,SAAS,CAAEC,YAAY,CAAC,CAAGhC,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACiC,YAAY,CAAEC,eAAe,CAAC,CAAGlC,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACmC,QAAQ,CAAEC,WAAW,CAAC,CAAGpC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACqC,QAAQ,CAAEC,WAAW,CAAC,CAAGtC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACuC,OAAO,CAAEC,UAAU,CAAC,CAAGxC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACyC,KAAK,CAAEC,QAAQ,CAAC,CAAG1C,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAC2C,eAAe,CAAEC,kBAAkB,CAAC,CAAG5C,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC6C,UAAU,CAAEC,aAAa,CAAC,CAAG9C,QAAQ,CAAC,IAAM,CAC/C,KAAM,CAAA+C,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC9C,MAAO,CAAAF,KAAK,CAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAG,KAAK,CAC5C,CAAC,CAAC,CAEF,KAAM,CAAAK,sBAAsB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG7C,SAAS,CAAC8C,MAAM,CAAC,CAChE3C,WAAW,CAACH,SAAS,CAAC0C,WAAW,CAAC,CAAC,CACvC,CAAC,CAED,KAAM,CAAAK,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,WAAW,CAAG,CAACd,UAAU,CAC/BC,aAAa,CAACa,WAAW,CAAC,CAC1BX,YAAY,CAACY,OAAO,CAAC,UAAU,CAAEV,IAAI,CAACW,SAAS,CAACF,WAAW,CAAC,CAAC,CACjE,CAAC,CAED;AACA1D,SAAS,CAAC,IAAM,CACZ,GAAI4C,UAAU,CAAE,CACZiB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC5C,CAAC,IAAM,CACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC/C,CACJ,CAAC,CAAE,CAACrB,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAsB,SAAS,CAAGjE,WAAW,CAAC,IAAM,CAChCkD,sBAAsB,CAAC,CAAC,CACxBhC,OAAO,CAAC,EAAE,CAAC,CACXE,aAAa,CAAC,KAAK,CAAC,CACxB,CAAC,CAAE,EAAE,CAAC,CAENrB,SAAS,CAAC,IAAM,CACZ,GAAIsB,aAAa,CAAE,CACf4C,SAAS,CAAC,CAAC,CACf,CACJ,CAAC,CAAE,CAAC5C,aAAa,CAAE4C,SAAS,CAAC,CAAC,CAE9BlE,SAAS,CAAC,IAAM,CACZ,GAAIkB,IAAI,CAAG,CAAC,EAAI,CAACE,UAAU,EAAIE,aAAa,CAAE,CAC1C,KAAM,CAAA6C,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC3BjD,OAAO,CAAEkD,QAAQ,EAAKA,QAAQ,CAAG,CAAC,CAAC,CACvC,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAMC,YAAY,CAACH,KAAK,CAAC,CACpC,CAAC,IAAM,IAAIjD,IAAI,GAAK,CAAC,EAAII,aAAa,CAAE,CACpCD,aAAa,CAAC,IAAI,CAAC,CACvB,CACJ,CAAC,CAAE,CAACH,IAAI,CAAEE,UAAU,CAAEE,aAAa,CAAC,CAAC,CAErC,KAAM,CAAAiD,YAAY,CAAIC,CAAC,EAAK,CACxB,GAAI,CAACpD,UAAU,EAAIE,aAAa,CAAE,CAC9BP,QAAQ,CAACyD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACxB,GAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,GAAK9D,QAAQ,CAAE,CAC7B,KAAM,CAAA+D,QAAQ,CAAG3D,KAAK,CAAG,CAAC,CAC1B,KAAM,CAAA4D,qBAAqB,CAAGhD,kBAAkB,CAAG,CAAC,CACpDX,QAAQ,CAAC0D,QAAQ,CAAC,CAClB9C,qBAAqB,CAAC+C,qBAAqB,CAAC,CAC5C7D,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,GAAIW,SAAS,CAAE,CACX,KAAM,CAAAmD,SAAS,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAGjD,SAAS,CACxC5B,UAAU,CAAC8E,mBAAmB,CAC1BtD,SAAS,CACTd,QAAQ,CACR4D,CAAC,CAACC,MAAM,CAACC,KAAK,CACd,IAAI,CACJG,SACJ,CAAC,CACL,CAEA1B,sBAAsB,CAAC,CAAC,CAC5B,CACJ,CACJ,CAAC,CAED,KAAM,CAAA8B,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACzD,IAAI,CAAE,CACP;AACA,GAAI,CACA,KAAM,CAAA0D,OAAO,CAAG,KAAM,CAAAhF,UAAU,CAACiF,UAAU,CAACjD,QAAQ,CAAC,CACrDT,OAAO,CAACyD,OAAO,CAAC,CAChBjD,eAAe,CAAC,KAAK,CAAC,CAC1B,CAAE,MAAOmD,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,OACJ,CACJ,CAEA7D,gBAAgB,CAAC,IAAI,CAAC,CACtBQ,YAAY,CAAC+C,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAExB;AACA,GAAIvD,IAAI,CAAE,CACN,GAAI,CACA,KAAM,CAAA8D,OAAO,CAAG,KAAM,CAAApF,UAAU,CAACqF,iBAAiB,CAAC/D,IAAI,CAACgE,EAAE,CAAE,CACxDxE,KAAK,CAAE,CAAC,CACRyE,QAAQ,CAAE,EAAE,CACZ7D,kBAAkB,CAAE,CAAC,CACrB8D,QAAQ,CAAE,CAAC,CACXC,GAAG,CAAE,CACT,CAAC,CAAC,CACFhE,YAAY,CAAC2D,OAAO,CAACE,EAAE,CAAC,CAC5B,CAAE,MAAOJ,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACnD,CACJ,CACJ,CAAC,CAED,KAAM,CAAAQ,gBAAgB,CAAG,KAAO,CAAApB,CAAC,EAAK,CAClCA,CAAC,CAACqB,cAAc,CAAC,CAAC,CAClB,GAAI3D,QAAQ,CAAC4D,IAAI,CAAC,CAAC,EAAI1D,QAAQ,CAAC0D,IAAI,CAAC,CAAC,CAAE,CACpC,GAAI,CACA,GAAI,CAAAC,QAAQ,CACZ,GAAIzD,OAAO,CAAE,CACTyD,QAAQ,CAAG,KAAM,CAAA7F,UAAU,CAAC8F,SAAS,CAAC9D,QAAQ,CAAC4D,IAAI,CAAC,CAAC,CAAE1D,QAAQ,CAAC,CACpE,CAAC,IAAM,CACH2D,QAAQ,CAAG,KAAM,CAAA7F,UAAU,CAACiF,UAAU,CAACjD,QAAQ,CAAC4D,IAAI,CAAC,CAAC,CAAE1D,QAAQ,CAAC,CACrE,CACAX,OAAO,CAACsE,QAAQ,CAAC,CACjB9D,eAAe,CAAC,KAAK,CAAC,CAC1B,CAAE,MAAOmD,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvDa,KAAK,CAACb,KAAK,CAACc,OAAO,EAAI,uBAAuB,CAAC,CACnD,CACJ,CACJ,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGlG,WAAW,CAAC,SAAY,CAC1C,GAAIuB,IAAI,CAAE,CACN,GAAI,CACA,KAAM,CAAA4E,SAAS,CAAG,KAAM,CAAAlG,UAAU,CAACmG,YAAY,CAAC7E,IAAI,CAACgE,EAAE,CAAC,CACxD/C,QAAQ,CAAC2D,SAAS,CAAC,CACvB,CAAE,MAAOhB,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CACJ,CAAC,CAAE,CAAC5D,IAAI,CAAC,CAAC,CAEV,KAAM,CAAA8E,eAAe,CAAGrG,WAAW,CAAC,SAAY,CAC5C,GAAIuB,IAAI,EAAIE,SAAS,CAAE,CACnB,KAAM,CAAAiE,GAAG,CAAG/D,kBAAkB,CAAG,CAAC,CAAIA,kBAAkB,CAAG,EAAE,EAAK,EAAE,CAAGV,IAAI,CAAC,CAAG,CAAC,CAChF,KAAM,CAAAwE,QAAQ,CAAG9D,kBAAkB,CAAG,CAAC,CAAIA,kBAAkB,EAAIA,kBAAkB,CAAG,CAAC,CAAC,CAAI,GAAG,CAAG,CAAC,CAEnG,GAAI,CACA,KAAM,CAAA1B,UAAU,CAACqF,iBAAiB,CAAC/D,IAAI,CAACgE,EAAE,CAAE,CACxCxE,KAAK,CACLyE,QAAQ,CAAEvE,IAAI,CACdU,kBAAkB,CAClB8D,QAAQ,CACRC,GACJ,CAAC,CAAC,CACN,CAAE,MAAOP,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CACjD,CACJ,CACJ,CAAC,CAAE,CAAC5D,IAAI,CAAEE,SAAS,CAAEE,kBAAkB,CAAEV,IAAI,CAAEF,KAAK,CAAC,CAAC,CAEtDhB,SAAS,CAAC,IAAM,CACZ,GAAIoB,UAAU,EAAII,IAAI,CAAE,CACpB8E,eAAe,CAAC,CAAC,CACjBH,aAAa,CAAC,CAAC,CACnB,CACJ,CAAC,CAAE,CAAC/E,UAAU,CAAEI,IAAI,CAAE8E,eAAe,CAAEH,aAAa,CAAC,CAAC,CAEtD,mBACI5F,KAAA,QAAKgG,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBjG,KAAA,QAAKgG,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnBnG,IAAA,OAAIkG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,cAAY,CAAI,CAAC,cACvCnG,IAAA,WACIoG,OAAO,CAAEhD,cAAe,CACxB8C,SAAS,CAAC,kBAAkB,CAC5BG,KAAK,CAAE9D,UAAU,CAAG,sBAAsB,CAAG,qBAAsB,CAAA4D,QAAA,CAElE5D,UAAU,CAAG,IAAI,CAAG,IAAI,CACrB,CAAC,EACR,CAAC,CAELZ,YAAY,EAAI,CAACR,IAAI,eAClBjB,KAAA,QAAKgG,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBnG,IAAA,OAAAmG,QAAA,CAAKlE,OAAO,CAAG,OAAO,CAAG,gBAAgB,CAAK,CAAC,cAC/C/B,KAAA,SAAMoG,QAAQ,CAAEf,gBAAiB,CAAAY,QAAA,eAC7BnG,IAAA,UACIuG,IAAI,CAAC,MAAM,CACXlC,KAAK,CAAExC,QAAS,CAChB2E,QAAQ,CAAGrC,CAAC,EAAKrC,WAAW,CAACqC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAC7CoC,WAAW,CAAC,aAAa,CACzBP,SAAS,CAAC,aAAa,CACvBQ,QAAQ,MACX,CAAC,cACF1G,IAAA,UACIuG,IAAI,CAAC,UAAU,CACflC,KAAK,CAAEtC,QAAS,CAChByE,QAAQ,CAAGrC,CAAC,EAAKnC,WAAW,CAACmC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAC7CoC,WAAW,CAAC,aAAa,CACzBP,SAAS,CAAC,aAAa,CACvBQ,QAAQ,MACX,CAAC,cACF1G,IAAA,WAAQuG,IAAI,CAAC,QAAQ,CAACL,SAAS,CAAC,cAAc,CAAAC,QAAA,CACzClE,OAAO,CAAG,OAAO,CAAG,gBAAgB,CACjC,CAAC,cACTjC,IAAA,WACIuG,IAAI,CAAC,QAAQ,CACbH,OAAO,CAAEA,CAAA,GAAMlE,UAAU,CAAC,CAACD,OAAO,CAAE,CACpCiE,SAAS,CAAC,eAAe,CAAAC,QAAA,CAExBlE,OAAO,CAAG,2BAA2B,CAAG,wBAAwB,CAC7D,CAAC,EACP,CAAC,EACN,CACR,CAEAd,IAAI,EAAI,CAACF,aAAa,eACnBf,KAAA,QAAKgG,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBjG,KAAA,MAAAiG,QAAA,EAAG,WAAS,CAAChF,IAAI,CAACU,QAAQ,CAAC,GAAC,EAAG,CAAC,CAC/BM,KAAK,eACFjC,KAAA,QAAKgG,SAAS,CAAC,OAAO,CAAAC,QAAA,eAClBnG,IAAA,OAAAmG,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBjG,KAAA,MAAAiG,QAAA,EAAG,cAAY,CAAChE,KAAK,CAACwE,UAAU,EAAI,CAAC,EAAI,CAAC,cAC1CzG,KAAA,MAAAiG,QAAA,EAAG,eAAa,CAACnD,IAAI,CAAC4D,KAAK,CAACzE,KAAK,CAAC0E,OAAO,EAAI,CAAC,CAAC,EAAI,CAAC,cACpD3G,KAAA,MAAAiG,QAAA,EAAG,kBAAgB,CAAChE,KAAK,CAAC2E,cAAc,EAAI,CAAC,EAAI,CAAC,EACjD,CACR,cACD5G,KAAA,QAAKgG,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzBnG,IAAA,WAAQoG,OAAO,CAAExB,eAAgB,CAACsB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAE3D,CAAQ,CAAC,cACTnG,IAAA,QAAQ,CAAC,cACTA,IAAA,WACIoG,OAAO,CAAEA,CAAA,GAAM9D,kBAAkB,CAAC,IAAI,CAAE,CACxC4D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CACjC,0BAED,CAAQ,CAAC,EACR,CAAC,EACL,CACR,CAEAlF,aAAa,eACVf,KAAA,CAAAE,SAAA,EAAA+F,QAAA,eACIjG,KAAA,QAAKgG,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAC,aAAW,CAACtF,IAAI,EAAM,CAAC,cAC9Cb,IAAA,QAAKkG,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAE5F,QAAQ,CAAM,CAAC,CACzC,CAACQ,UAAU,eACRf,IAAA,QAAKkG,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC5BnG,IAAA,UACIuG,IAAI,CAAC,MAAM,CACXlC,KAAK,CAAE5D,KAAM,CACb+F,QAAQ,CAAEtC,YAAa,CACvBgC,SAAS,CAAC,aAAa,CACvBO,WAAW,CAAC,cAAc,CAC1BM,SAAS,MACTC,QAAQ,CAAEjG,UAAW,CACxB,CAAC,CACD,CACR,EACH,CACL,CAEAA,UAAU,eACPb,KAAA,QAAKgG,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBnG,IAAA,MAAAmG,QAAA,CAAG,cAAY,CAAG,CAAC,cACnBjG,KAAA,MAAAiG,QAAA,EAAG,cAAY,CAACxF,KAAK,EAAI,CAAC,cAC1BT,KAAA,MAAAiG,QAAA,EAAG,uBAAqB,CAAC5E,kBAAkB,EAAI,CAAC,cAChDrB,KAAA,QAAKgG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9BnG,IAAA,WACIoG,OAAO,CAAEA,CAAA,GAAM,CACXxF,QAAQ,CAAC,CAAC,CAAC,CACXY,qBAAqB,CAAC,CAAC,CAAC,CACxBV,OAAO,CAAC,EAAE,CAAC,CACXE,aAAa,CAAC,KAAK,CAAC,CACpBE,gBAAgB,CAAC,KAAK,CAAC,CACvBR,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAE,CACFwF,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC3B,YAED,CAAQ,CAAC,cACTnG,IAAA,QAAQ,CAAC,cACTA,IAAA,WACIoG,OAAO,CAAEA,CAAA,GAAM9D,kBAAkB,CAAC,IAAI,CAAE,CACxC4D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CACjC,0BAED,CAAQ,CAAC,EACR,CAAC,EACL,CACR,CAEA9D,eAAe,eACZrC,IAAA,CAACF,WAAW,EAACmH,OAAO,CAAEA,CAAA,GAAM3E,kBAAkB,CAAC,KAAK,CAAE,CAAE,CAC3D,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAhC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}